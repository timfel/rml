		falbala.inria.fr
		200 MHz Intel Pentium Pro

		gcc 2.7.2 -O3 -fomit-frame-pointer
mask					16.79
mask.jptab				16.93
mask.jptab.noshift			16.91 (Note X86.1)
diff					12.29
diff.jptab.rngchk-goto			12.39
diff.jptab.rngchk-goto.noshift		11.67
diff.jptab.rngchk-setzero		12.90
diff.jptab.rngchk-setzero.noshift	12.20
diff.jptab.rngchk-i386			16.12
diff.jptab.rngchk-i386.noshift		15.12
diff.jptab.rngchk-i686-cmov		14.81
diff.jptab.rngchk-i686-cmov.noshift	14.11

		brewer
		133 MHz Intel Pentium

		gcc 2.7.2.2 -O3 -fomit-frame-pointer
mask					18.89
mask.jptab				15.91
mask.jptab.noshift			15.91 (Note X86.1)
diff					15.95
diff.jptab.rngchk-goto			12.55
diff.jptab.rngchk-goto.noshift		11.54
diff.jptab.rngchk-setzero		12.88
diff.jptab.rngchk-setzero.noshift	11.54
diff.jptab.rngchk-i386			15.76
diff.jptab.rngchk-i386.noshift		14.76

NOTES

X86.1: GCC generates the same dispatch code for mask.jptab and
mask.jptab.noshift, except for the last instruction. In mask.jptab, the
sequence ends with "jmp *(%ebx,%eax,4)", while in mask.jptab.noshift
it ends with "jmp *(%eax,%ebx)". Apparently, these have similar
costs on the Pentium and Pentium Pro. (An earlier experiment showed
that on a DX50 i486, the latter was noticeably slower.)

		sen1.ida.liu.se
		167 MHz SPARCstation Ultra-1

		cc -xO2 -xtarget=ultra
mask					18.44
diff					18.21
diff.hack				15.90

		gcc 2.7.2.2 -O3
mask					18.18
mask.jptab				16.34
mask.jptab.noshift			16.69 (One sll shorter, but slower ?)
diff					15.41
diff.jptab.rngchk-goto			13.86
diff.jptab.rngchk-goto.noshift		14.23 (One sll shorter, but bgu becomes bgu,a)
diff.jptab.rngchk-setzero		16.38
diff.jptab.rngchk-setzero.noshift	14.60 (One sra and one sll shorter)
diff.jptab.rngchk-sparc			17.47
diff.jptab.rngchk-sparc.noshift		15.98
diff.jptab.rngchk-sparc9-movcc		16.15
diff.jptab.rngchk-sparc9-movcc.noshift	14.80

		bahia.inria.fr
		233 MHz Alpha DECstation

		cc -std1 -O3
mask					17.00
diff					14.43
diff.hack				14.43 (Identical to plain diff)

		gcc 2.7.2 -O3
mask					15.50
mask.jptab				12.05
mask.jptab.noshift			12.05 (Same # insns, an s8addq became addq)
diff					13.43
diff.jptab.rngchk-goto			10.65
diff.jptab.rngchk-goto.noshift		 8.93
diff.jptab.rngchk-setzero		11.94 (A beq became a cmoveq, slower?!)
diff.jptab.rngchk-setzero.noshift	10.67 (A beq became a cmoveq, slower?!)
diff.jptab.rngchk-alpha-cmpult		11.95
diff.jptab.rngchk-alpha-cmpult.noshift	11.37 (Immed. >= 256 is loaded to reg 1st!!)
diff.jptab.rngchk-alpha-cmpule		11.95 (Identical to setzero)
diff.jptab.rngchk-alpha-cmpule.noshift	10.67 (Identical to setzero.noshift)

		omega.nsc.liu.se
		? MHz MIPS SGI O2

		cc -xansi -O2
mask					15.53
diff					13.03
diff.hack				13.03 (Identical to plain diff)

		gcc 2.6.3 -O2
mask					13.90
mask.jptab				10.22
mask.jptab.noshift			 9.47
diff					11.36
diff.jptab.rngchk-goto			 9.21
diff.jptab.rngchk-goto.noshift		 7.74
diff.jptab.rngchk-setzero		 9.38
diff.jptab.rngchk-setzero.noshift	 7.88
diff.jptab.rngchk-mips			10.08
diff.jptab.rngchk-mips.noshift		 8.58

		myst8.ida.liu.se
		75 MHz HP 9000/715

		cc -Aa -D_HPUX_SOURCE +O2
mask					30.67
diff					28.57
diff.hack				24.97

		gcc 2.7.0 -O2
mask					23.89
mask.jptab				23.97
mask.jptab.noshift			25.76 (An ldwx,s became addl; ldw)
diff					18.04 (No jump table, jump to PC+scaled index, then jump to body of case, unless it can be inlined in the two instructions. Wow!)
diff.jptab.rngchk-goto			23.36
diff.jptab.rngchk-goto.noshift		23.29 (Loses one extrs, but the ldwx,s became addl; ldw)
diff.jptab.rngchk-setzero		23.53
diff.jptab.rngchk-setzero.noshift	23.52
diff.jptab.rngchk-hppa			23.53 (Identical to setzero)
diff.jptab.rngchk-hppa.noshift		23.52 (Identical to setzero.noshift)

		powerfix.ida.liu.se
		80 MHz PowerPC 601

		mcc -Ac=mixed -O3
mask					39.12
diff					39.77
diff.hack				32.78

		gcc 2.7.0 -O2 -mno-stack-check
mask					32.55
mask.jptab				27.02
mask.jptab.noshift			25.72
diff					26.75
diff.jptab.rngchk-goto			23.00
diff.jptab.rngchk-goto.noshift		19.59
diff.jptab.rngchk-setzero		28.54
diff.jptab.rngchk-setzero.noshift	25.06
diff.jptab.rngchk-rs6000		28.54 (Similar to setzero)
diff.jptab.rngchk-rs6000.noshift	25.07 (Similar to setzero.noshift)

		joltfix.ida.liu.se
		? Mhz PowerPC 604

		xlc -O2 (do NOT use -qinlglue!)
mask					19.31
diff					17.12
diff.hack				16.00

		gcc 2.7.2.2 -O2
mask					17.00
mask.jptab				14.96
mask.jptab.noshift			14.83
diff					14.54
diff.jptab.rngchk-goto			11.60
diff.jptab.rngchk-goto.noshift		 9.61 (2 insns shorter dispatch)
diff.jptab.rngchk-setzero		16.79
diff.jptab.rngchk-setzero.noshift	14.76
diff.jptab.rngchk-rs6000		15.78 (subfic;subfe;nand became li;subfc;subfe)
diff.jptab.rngchk-rs6000.noshift	13.74 (subfic;subfe;nand became li;subfc;subfe)
