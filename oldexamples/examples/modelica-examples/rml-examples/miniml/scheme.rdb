v:<scheme.rml>:167.18.167.19|[167.3.167.43]|gen_none[ty:Types.Type]
v:<scheme.rml>:152.23.152.26|[152.3.152.35]|gen_bvars[info:'a]
v:<scheme.rml>:156.44.156.48|[154.3.156.64]|gen_bvars[bvars:(Types.Alpha*'a) list]
v:<scheme.rml>:156.29.156.30|[154.3.156.64]|gen_bvars[eq:bool]
v:<scheme.rml>:156.51.156.54|[154.3.156.64]|gen_bvars[info:(bool*string list option) list]
v:<scheme.rml>:154.45.154.49|[154.3.156.64]|gen_bvars[info':(bool*string list option) list]
v:<scheme.rml>:156.32.156.35|[154.3.156.64]|gen_bvars[ovld:string list option]
v:<scheme.rml>:68.24.68.25|[66.3.69.1]|all_quotes[cs:Comb list]
v:<scheme.rml>:76.26.76.27|[74.3.76.39]|unquote_all[cs:Comb list]
v:<scheme.rml>:76.21.76.22|[74.3.76.39]|unquote_all[ty:Types.Type]
v:<scheme.rml>:74.26.74.28|[74.3.76.39]|unquote_all[tys:Types.Type list]
v:<scheme.rml>:82.9.82.10|[80.3.82.52]|mkcons[cs:Comb list]
v:<scheme.rml>:80.42.80.44|[80.3.82.52]|mkcons[tys:Types.Type list]
v:<scheme.rml>:82.13.82.18|[80.3.82.52]|mkcons[tyname:string]
v:<scheme.rml>:86.9.86.10|[84.3.86.40]|mkcons[cs:Comb list]
v:<scheme.rml>:86.13.86.18|[84.3.86.40]|mkcons[tyname:string]
v:<scheme.rml>:94.14.94.16|[92.3.94.29]|next_off[off:int]
v:<scheme.rml>:92.27.92.30|[92.3.94.29]|next_off[off':int]
v:<scheme.rml>:100.19.100.26|[98.3.100.52]|gen_bound[bvars_in:('a*int) list]
v:<scheme.rml>:100.12.100.16|[98.3.100.52]|gen_bound[alpha:'a]
v:<scheme.rml>:98.44.98.46|[98.3.100.52]|gen_bound[off:int]
v:<scheme.rml>:104.19.104.26|[102.3.104.65]|gen_bound[bvars_in:('a*int) list]
v:<scheme.rml>:104.12.104.16|[102.3.104.65]|gen_bound[alpha:'a]
v:<scheme.rml>:102.67.102.69|[102.3.104.65]|gen_bound[off:int]
v:<scheme.rml>:110.30.110.33|[110.3.112.55]|cannot_gen[flag:bool]
v:<scheme.rml>:112.27.112.29|[110.3.112.55]|cannot_gen[lev:int]
v:<scheme.rml>:112.42.112.46|[110.3.112.55]|cannot_gen[limit:int]
v:<scheme.rml>:118.12.118.16|[116.3.118.72]|gen_alpha[alpha:Types.Alpha]
v:<scheme.rml>:118.19.118.26|[116.3.118.72]|gen_alpha[bvars_in:'a]
v:<scheme.rml>:118.29.118.33|[116.3.118.72]|gen_alpha[limit:int]
v:<scheme.rml>:123.12.123.16|[120.3.123.55]|gen_alpha[alpha:Types.Alpha]
v:<scheme.rml>:123.19.123.26|[120.3.123.55]|gen_alpha[bvars_in:(Types.Alpha*int) list]
v:<scheme.rml>:121.33.121.41|[120.3.123.55]|gen_alpha[bvars_out:(Types.Alpha*int) list]
v:<scheme.rml>:121.44.121.47|[120.3.123.55]|gen_alpha[comb:Comb]
v:<scheme.rml>:123.29.123.33|[120.3.123.55]|gen_alpha[limit:int]
v:<scheme.rml>:129.12.129.19|[127.3.129.45]|gen1[bvars_in:'a]
v:<scheme.rml>:127.63.127.71|[127.3.129.45]|gen1[bvars_out:'a]
v:<scheme.rml>:127.74.127.74|[127.3.129.45]|gen1[c:'a]
v:<scheme.rml>:129.22.129.26|[127.3.129.45]|gen1[limit:'a]
v:<scheme.rml>:129.7.129.8|[127.3.129.45]|gen1[ty:Types.Type]
v:<scheme.rml>:127.26.127.28|[127.3.129.45]|gen1[ty':Types.Type]
v:<scheme.rml>:143.18.143.25|[143.3.143.47]|gen3[bvars_in:'a]
v:<scheme.rml>:145.39.145.47|[145.3.148.53]|gen3[bvars_tmp:'a]
v:<scheme.rml>:148.16.148.23|[145.3.148.53]|gen3[bvars_in:'a]
v:<scheme.rml>:146.33.146.41|[145.3.148.53]|gen3[bvars_out:'a]
v:<scheme.rml>:146.44.146.44|[145.3.148.53]|gen3[c:'a]
v:<scheme.rml>:145.50.145.51|[145.3.148.53]|gen3[cs:'a list]
v:<scheme.rml>:148.26.148.30|[145.3.148.53]|gen3[limit:'a]
v:<scheme.rml>:148.11.148.13|[145.3.148.53]|gen3[tys:Types.Type list]
v:<scheme.rml>:148.7.148.8|[145.3.148.53]|gen3[ty:Types.Type]
v:<scheme.rml>:133.46.133.54|[133.3.135.57]|gen2[bvars_out:(Types.Alpha*int) list]
v:<scheme.rml>:135.17.135.21|[133.3.135.57]|gen2[alpha:Types.Alpha]
v:<scheme.rml>:135.24.135.31|[133.3.135.57]|gen2[bvars_in:(Types.Alpha*int) list]
v:<scheme.rml>:133.57.133.57|[133.3.135.57]|gen2[c:Comb]
v:<scheme.rml>:135.34.135.38|[133.3.135.57]|gen2[limit:int]
v:<scheme.rml>:139.31.139.38|[137.3.139.64]|gen2[bvars_in:(Types.Alpha*int) list]
v:<scheme.rml>:137.39.137.47|[137.3.139.64]|gen2[bvars_out:(Types.Alpha*int) list]
v:<scheme.rml>:137.77.137.77|[137.3.139.64]|gen2[c:Comb]
v:<scheme.rml>:137.50.137.51|[137.3.139.64]|gen2[cs:Comb list]
v:<scheme.rml>:139.41.139.45|[137.3.139.64]|gen2[limit:int]
v:<scheme.rml>:139.18.139.20|[137.3.139.64]|gen2[tys:Types.Type list]
v:<scheme.rml>:139.22.139.27|[137.3.139.64]|gen2[tyname:string]
v:<scheme.rml>:160.32.160.40|[160.3.163.43]|gen_limit[bvars_out:(Types.Alpha*int) list]
v:<scheme.rml>:160.43.160.46|[160.3.163.43]|gen_limit[comb:Comb]
v:<scheme.rml>:161.30.161.33|[160.3.163.43]|gen_limit[info:(bool*string list option) list]
v:<scheme.rml>:163.16.163.20|[160.3.163.43]|gen_limit[limit:int]
v:<scheme.rml>:163.12.163.13|[160.3.163.43]|gen_limit[ty:Types.Type]
v:<scheme.rml>:35.21.35.22|[35.3.35.32]|inst2[ty:Types.Type]
v:<scheme.rml>:39.17.39.21|[37.3.39.28]|inst2[bvars:Types.Type vector]
v:<scheme.rml>:39.14.39.14|[37.3.39.28]|inst2[i:int]
v:<scheme.rml>:37.32.37.33|[37.3.39.28]|inst2[ty:Types.Type]
v:<scheme.rml>:43.27.43.31|[41.3.43.58]|inst2[bvars:Types.Type vector]
v:<scheme.rml>:43.15.43.16|[41.3.43.58]|inst2[cs:Comb list]
v:<scheme.rml>:43.18.43.23|[41.3.43.58]|inst2[tyname:string]
v:<scheme.rml>:41.28.41.30|[41.3.43.58]|inst2[tys:Types.Type list]
v:<scheme.rml>:51.15.51.19|[49.3.51.31]|inst3[bvars:Types.Type vector]
v:<scheme.rml>:51.8.51.8|[49.3.51.31]|inst3[c:Comb]
v:<scheme.rml>:51.11.51.12|[49.3.51.31]|inst3[cs:Comb list]
v:<scheme.rml>:49.27.49.28|[49.3.51.31]|inst3[ty:Types.Type]
v:<scheme.rml>:49.52.49.54|[49.3.51.31]|inst3[tys:Types.Type list]
v:<scheme.rml>:31.10.31.14|[29.3.31.53]|mkbvtys[alpha:Types.Alpha]
v:<scheme.rml>:31.17.31.22|[29.3.31.53]|mkbvtys[alphas:Types.Alpha list]
v:<scheme.rml>:29.27.29.29|[29.3.31.53]|mkbvtys[tys:Types.Type list]
v:<scheme.rml>:21.34.21.39|[21.3.23.51]|mkbvalphas[alphas:Types.Alpha list]
v:<scheme.rml>:21.75.21.79|[21.3.23.51]|mkbvalphas[alpha:Types.Alpha]
v:<scheme.rml>:23.24.23.28|[21.3.23.51]|mkbvalphas[bvars:(bool*string list option) list]
v:<scheme.rml>:23.14.23.15|[21.3.23.51]|mkbvalphas[eq:bool]
v:<scheme.rml>:23.31.23.33|[21.3.23.51]|mkbvalphas[lev:int]
v:<scheme.rml>:23.17.23.20|[21.3.23.51]|mkbvalphas[ovld:string list option]
v:<scheme.rml>:55.34.55.39|[55.3.58.46]|inst[alphas:Types.Alpha list]
v:<scheme.rml>:58.14.58.18|[55.3.58.46]|inst[bvars:(bool*string list option) list]
v:<scheme.rml>:58.20.58.23|[55.3.58.46]|inst[comb:Comb]
v:<scheme.rml>:58.27.58.29|[55.3.58.46]|inst[lev:int]
v:<scheme.rml>:55.61.55.63|[55.3.58.46]|inst[tys:Types.Type list]
v:<scheme.rml>:56.49.56.50|[55.3.58.46]|inst[ty:Types.Type]
v:<scheme.rml>:56.21.56.24|[55.3.58.46]|inst[tys':Types.Type vector]
/*  ME_Dict: */
/*  - start external M_VE_CON: */
c:<types.rml>:9.6.9.9|Types.CONS:(Types.Type list,string) => Types.Type
c:<types.rml>:10.20.10.24|Types.ALPHA:(int,int,bool,string list option,Types.Type lvar) => Types.Alpha
c:<types.rml>:8.20.8.22|Types.VAR:Types.Alpha => Types.Type
/* - end external */
/*  TE': */
t:<scheme.rml>:4.12.4.15|Comb
t:<scheme.rml>:7.8.7.18|AlphaScheme
t:<scheme.rml>:8.12.8.17|Scheme
/*  VE'': */
r:<scheme.rml>:132.10.132.13|gen2:(Types.Type,(Types.Alpha*int) list,int) => ((Types.Alpha*int) list,Comb)
c:<scheme.rml>:8.21.8.26|SCHEME:((bool*string list option) list,Comb) => Scheme
c:<scheme.rml>:6.6.6.11|MKCONS:(Comb list,string) => Comb
c:<scheme.rml>:5.6.5.10|BOUND:int => Comb
c:<scheme.rml>:4.20.4.24|QUOTE:Types.Type => Comb
r:<scheme.rml>:107.10.107.19|cannot_gen:(Types.Alpha,int) => bool
r:<scheme.rml>:63.10.63.19|all_quotes:Comb list => ()
r:<scheme.rml>:126.10.126.13|gen1:(Types.Type,(Types.Alpha*int) list,int) => ((Types.Alpha*int) list,Comb)
r:<scheme.rml>:151.10.151.18|gen_bvars:((Types.Alpha*'a) list,(bool*string list option) list) => (bool*string list option) list
r:<scheme.rml>:115.10.115.18|gen_alpha:(Types.Alpha,(Types.Alpha*int) list,int) => ((Types.Alpha*int) list,Comb)
r:<scheme.rml>:142.10.142.13|gen3:(Types.Type list,(Types.Alpha*int) list,int) => ((Types.Alpha*int) list,Comb list)
r:<scheme.rml>:97.10.97.18|gen_bound:('a,('a*int) list) => (('a*int) list,Comb)
r:<scheme.rml>:46.10.46.14|inst3:(Comb list,Types.Type vector) => Types.Type list
r:<scheme.rml>:166.10.166.17|gen_none:Types.Type => Scheme
r:<scheme.rml>:159.10.159.18|gen_limit:(Types.Type,int) => Scheme
r:<scheme.rml>:54.10.54.13|inst:(Scheme,int) => (Types.Alpha list,Types.Type)
r:<scheme.rml>:34.10.34.14|inst2:(Comb,Types.Type vector) => Types.Type
r:<scheme.rml>:79.10.79.15|mkcons:(Comb list,string) => Comb
r:<scheme.rml>:18.10.18.19|mkbvalphas:((bool*string list option) list,int) => Types.Alpha list
r:<scheme.rml>:26.10.26.16|mkbvtys:Types.Alpha list => Types.Type list
r:<scheme.rml>:89.10.89.17|next_off:('a*int) list => int
r:<scheme.rml>:71.10.71.20|unquote_all:Comb list => Types.Type list
