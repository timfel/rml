/*  ME_Dict: */
/*  TE': */
t:<absyn.rml>:13.14.13.16|pat
t:<absyn.rml>:27.14.27.18|crule
t:<absyn.rml>:9.14.9.18|const
t:<absyn.rml>:17.14.17.16|exp
t:<absyn.rml>:6.14.6.18|prim2
t:<absyn.rml>:5.14.5.18|prim1
t:<absyn.rml>:3.10.3.12|var
/*  VE'': */
c:<absyn.rml>:7.29.7.31|DIV:prim2
c:<absyn.rml>:10.6.10.13|BOOLcnst:bool => const
c:<absyn.rml>:6.52.6.54|AND:prim2
c:<absyn.rml>:7.11.7.13|ADD:prim2
c:<absyn.rml>:24.6.24.11|APPexp:(exp,exp) => exp
c:<absyn.rml>:13.20.13.27|CONSTpat:const => pat
c:<absyn.rml>:25.6.25.12|CASEexp:(exp,(pat*exp) list) => exp
c:<absyn.rml>:17.20.17.27|CONSTexp:const => exp
c:<absyn.rml>:19.6.19.12|CONSexp:(exp,exp) => exp
c:<absyn.rml>:15.6.15.12|CONSpat:(pat,pat) => pat
c:<absyn.rml>:7.23.7.25|MUL:prim2
c:<absyn.rml>:9.22.9.28|INTcnst:int => const
c:<absyn.rml>:6.42.6.43|GE:prim2
c:<absyn.rml>:6.32.6.33|EQ:prim2
c:<absyn.rml>:6.47.6.48|GT:prim2
c:<absyn.rml>:23.6.23.10|IFexp:(exp,exp,exp) => exp
c:<absyn.rml>:6.22.6.23|LT:prim2
c:<absyn.rml>:20.6.20.11|LAMexp:(string,exp) => exp
c:<absyn.rml>:6.27.6.28|LE:prim2
c:<absyn.rml>:7.35.7.37|MOD:prim2
c:<absyn.rml>:5.22.5.24|NOT:prim1
c:<absyn.rml>:5.28.5.30|NEG:prim1
c:<absyn.rml>:6.37.6.38|NE:prim2
c:<absyn.rml>:11.6.11.12|NILcnst:const
c:<absyn.rml>:26.6.26.11|RECexp:((string*exp) list,exp) => exp
c:<absyn.rml>:21.6.21.13|PRIM1exp:(prim1,exp) => exp
c:<absyn.rml>:7.6.7.7|OR:prim2
c:<absyn.rml>:22.6.22.13|PRIM2exp:(prim2,exp,exp) => exp
c:<absyn.rml>:18.6.18.11|VARexp:string => exp
c:<absyn.rml>:7.17.7.19|SUB:prim2
c:<absyn.rml>:14.6.14.11|VARpat:string => pat
