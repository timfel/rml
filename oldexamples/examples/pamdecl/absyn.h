/* interface Absyn */
extern void Absyn_5finit(void);
#define Absyn__PROG_3dBOX2 0
#define Absyn__PROG(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__NAMEDECL_3dBOX2 0
#define Absyn__NAMEDECL(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__WHILE_3dBOX2 4
#define Absyn__WHILE(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__IF_3dBOX3 3
#define Absyn__IF(X1,X2,X3) (mk_box3(3,(X1),(X2),(X3)))
#define Absyn__NOOP_3dBOX0 2
#define Absyn__NOOP (mk_box0(2))
#define Absyn__WRITE_3dBOX1 1
#define Absyn__WRITE(X1) (mk_box1(1,(X1)))
#define Absyn__ASSIGN_3dBOX2 0
#define Absyn__ASSIGN(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__VARIABLE_3dBOX1 5
#define Absyn__VARIABLE(X1) (mk_box1(5,(X1)))
#define Absyn__RELATION_3dBOX3 4
#define Absyn__RELATION(X1,X2,X3) (mk_box3(4,(X1),(X2),(X3)))
#define Absyn__UNARY_3dBOX2 3
#define Absyn__UNARY(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__BINARY_3dBOX3 2
#define Absyn__BINARY(X1,X2,X3) (mk_box3(2,(X1),(X2),(X3)))
#define Absyn__REALCONST_3dBOX1 1
#define Absyn__REALCONST(X1) (mk_box1(1,(X1)))
#define Absyn__INTCONST_3dBOX1 0
#define Absyn__INTCONST(X1) (mk_box1(0,(X1)))
#define Absyn__DIV_3dINT 3
#define Absyn__DIV (mk_icon(3))
#define Absyn__MUL_3dINT 2
#define Absyn__MUL (mk_icon(2))
#define Absyn__SUB_3dINT 1
#define Absyn__SUB (mk_icon(1))
#define Absyn__ADD_3dINT 0
#define Absyn__ADD (mk_icon(0))
#define Absyn__NEG_3dINT 0
#define Absyn__NEG (mk_icon(0))
#define Absyn__EQ_3dINT 5
#define Absyn__EQ (mk_icon(5))
#define Absyn__NE_3dINT 4
#define Absyn__NE (mk_icon(4))
#define Absyn__GE_3dINT 3
#define Absyn__GE (mk_icon(3))
#define Absyn__GT_3dINT 2
#define Absyn__GT (mk_icon(2))
#define Absyn__LE_3dINT 1
#define Absyn__LE (mk_icon(1))
#define Absyn__LT_3dINT 0
#define Absyn__LT (mk_icon(0))
