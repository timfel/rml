/* interface Absyn */
extern void Absyn_5finit(void);
#define Absyn__PROG_3dBOX2 0
#define Absyn__PROG(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__PROCBND_3dBOX3 1
#define Absyn__PROCBND(X1,X2,X3) (mk_box3(1,(X1),(X2),(X3)))
#define Absyn__FUNCBND_3dBOX4 0
#define Absyn__FUNCBND(X1,X2,X3,X4) (mk_box4(0,(X1),(X2),(X3),(X4)))
#define Absyn__BLOCK_3dBOX5 0
#define Absyn__BLOCK(X1,X2,X3,X4,X5) (mk_box5(0,(X1),(X2),(X3),(X4),(X5)))
#define Absyn__CONBND_3dBOX2 0
#define Absyn__CONBND(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__TYBND_3dBOX2 0
#define Absyn__TYBND(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__SKIP_3dBOX0 7
#define Absyn__SKIP (mk_box0(7))
#define Absyn__SEQ_3dBOX2 6
#define Absyn__SEQ(X1,X2) (mk_box2(6,(X1),(X2)))
#define Absyn__IF_3dBOX3 5
#define Absyn__IF(X1,X2,X3) (mk_box3(5,(X1),(X2),(X3)))
#define Absyn__WHILE_3dBOX2 4
#define Absyn__WHILE(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__PRETURN_3dBOX0 3
#define Absyn__PRETURN (mk_box0(3))
#define Absyn__FRETURN_3dBOX1 2
#define Absyn__FRETURN(X1) (mk_box1(2,(X1)))
#define Absyn__PCALL_3dBOX2 1
#define Absyn__PCALL(X1,X2) (mk_box2(1,(X1),(X2)))
#define Absyn__ASSIGN_3dBOX2 0
#define Absyn__ASSIGN(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__FCALL_3dBOX2 9
#define Absyn__FCALL(X1,X2) (mk_box2(9,(X1),(X2)))
#define Absyn__EQUALITY_3dBOX2 8
#define Absyn__EQUALITY(X1,X2) (mk_box2(8,(X1),(X2)))
#define Absyn__RELATION_3dBOX3 7
#define Absyn__RELATION(X1,X2,X3) (mk_box3(7,(X1),(X2),(X3)))
#define Absyn__BINARY_3dBOX3 6
#define Absyn__BINARY(X1,X2,X3) (mk_box3(6,(X1),(X2),(X3)))
#define Absyn__UNARY_3dBOX2 5
#define Absyn__UNARY(X1,X2) (mk_box2(5,(X1),(X2)))
#define Absyn__FIELD_3dBOX2 4
#define Absyn__FIELD(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__CAST_3dBOX2 3
#define Absyn__CAST(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__IDENT_3dBOX1 2
#define Absyn__IDENT(X1) (mk_box1(2,(X1)))
#define Absyn__REAL_3dBOX1 1
#define Absyn__REAL(X1) (mk_box1(1,(X1)))
#define Absyn__INT_3dBOX1 0
#define Absyn__INT(X1) (mk_box1(0,(X1)))
#define Absyn__VARBND_3dBOX2 0
#define Absyn__VARBND(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__REC_3dBOX1 3
#define Absyn__REC(X1) (mk_box1(3,(X1)))
#define Absyn__ARR_3dBOX2 2
#define Absyn__ARR(X1,X2) (mk_box2(2,(X1),(X2)))
#define Absyn__PTR_3dBOX1 1
#define Absyn__PTR(X1) (mk_box1(1,(X1)))
#define Absyn__NAME_3dBOX1 0
#define Absyn__NAME(X1) (mk_box1(0,(X1)))
#define Absyn__IDENTcon_3dBOX1 2
#define Absyn__IDENTcon(X1) (mk_box1(2,(X1)))
#define Absyn__REALcon_3dBOX1 1
#define Absyn__REALcon(X1) (mk_box1(1,(X1)))
#define Absyn__INTcon_3dBOX1 0
#define Absyn__INTcon(X1) (mk_box1(0,(X1)))
#define Absyn__NOT_3dINT 2
#define Absyn__NOT (mk_icon(2))
#define Absyn__INDIR_3dINT 1
#define Absyn__INDIR (mk_icon(1))
#define Absyn__ADDR_3dINT 0
#define Absyn__ADDR (mk_icon(0))
#define Absyn__IOR_3dINT 7
#define Absyn__IOR (mk_icon(7))
#define Absyn__IAND_3dINT 6
#define Absyn__IAND (mk_icon(6))
#define Absyn__IMOD_3dINT 5
#define Absyn__IMOD (mk_icon(5))
#define Absyn__IDIV_3dINT 4
#define Absyn__IDIV (mk_icon(4))
#define Absyn__RDIV_3dINT 3
#define Absyn__RDIV (mk_icon(3))
#define Absyn__MUL_3dINT 2
#define Absyn__MUL (mk_icon(2))
#define Absyn__SUB_3dINT 1
#define Absyn__SUB (mk_icon(1))
#define Absyn__ADD_3dINT 0
#define Absyn__ADD (mk_icon(0))
#define Absyn__LE_3dINT 1
#define Absyn__LE (mk_icon(1))
#define Absyn__LT_3dINT 0
#define Absyn__LT (mk_icon(0))
