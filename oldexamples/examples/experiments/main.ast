module Main:
relation main: ((string)list) => ()
end
relation pr =
	rule	
		----------------
		pr(RML.nil) => ()

	rule	print("strch:") => () &
		print(str) => () &
		print("\n") => () &
		pr(rest) => ()
		----------------
		pr(RML.cons(str,rest)) => ()

end
relation main =
	rule	print(x) => () &
		string_get_string_char(str,1) => ("t") &
		print("str:") => () &
		print(str) => () &
		print("\n") => () &
		string_list_string_char(str) => (strCharList) &
		pr(strCharList) => () &
		string_char_list_string(strCharList) => (str1) &
		string_get_string_char(str1,1) => (strChar) &
		string_get(str1,1) => (char) &
		list_string(RML.cons(char,RML.nil)) => (strCharC) &
		print("str1:") => () &
		print(str1) => () &
		print("\n") => () &
		print("strchar[1]=") => () &
		print(strChar) => () &
		print("\n") => () &
		print("strnth[1]=") => () &
		print(strCharC) => () &
		print("\n") => () &
		string_update_string_char(str1,1,"-") => (str2) &
		print("str2:") => () &
		print(str2) => () &
		print("\n") => () &
		intStringChar(66) => (strChar1) &
		string_char_int("\n") => (intg) &
		int_string(intg) => (strintg) &
		print("strChar1:") => () &
		print(strChar1) => () &
		print("\n") => () &
		print("stringCharInt(<cr>):") => () &
		print(strintg) => () &
		print("\n") => ()
		----------------
		main(x as RML.cons(str,rest)) => ()

	rule	print(str) => ()
		----------------
		main(RML.cons(str,rest)) => ()

end
