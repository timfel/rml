(*
    Copyright PELAB, Linkoping University

    This file is part of Open Source Modelica (OSM).

    OSM is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    OSM is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with OpenModelica; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

*)
(**
 ** file:        corba.rml
 ** module:      Corba
 ** description: Modelica Corba communication module
 **
 ** RCS: $Id: corba.rml,v 1.3 2004/09/28 06:27:43 kajny Exp $
 **
 ** This is the CORBA connection module of the compiler
 ** 
 ** The actual implementation differs between Windows and Unix versions. 
 ** The Windows implementation is located in ./winruntime and the Unix
 ** version lies in ./runtime
 ** 
 ** OpenModelica does not in itself include a complete CORBA implementaton.
 ** You need to download one, for example MICO from http://www.mico.org.
 **
 ** There exists some options that can be sent to configure concerinng 
 ** the usage of corba: 
 **    --with-CORBA=/location/of/corba/library
 **    --without-CORBA
 **)

module Corba:
(** relation initialize:
 ** Initializes the CORBA communication 
**)
  relation initialize: () => ()
(** 
 ** relation wait_for_command
 ** A blocking relation, waiting for incomming commands.
 ** (will lock)
**)
  relation wait_for_command: () => string
(** 
 ** Sends a reply from the incomming message returned by wait_for_command.
 ** MUST be issued after a wait_for_command has been issued. (will unlock)
 **)
  relation sendreply: (string) => ()

  relation close: () => ()
end	  