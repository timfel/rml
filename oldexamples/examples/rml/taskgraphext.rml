(*
    Copyright PELAB, Linkoping University
    This source is non-free and should not be included in OpenModelica.

*)

(**
 ** file:	 taskgraphext.rml
 ** module:      TaskGraphExt
 ** description: The external representation of a task graph, using Boost Graph Library
 ** in C++.
 **
 ** RCS: $Id: taskgraphext.rml,v 1.7 2004/10/14 10:55:59 petar Exp $
 ** 
 **)

(**
 ** This module is the interface to the externally implemented task graph using Boost 
 ** Graph Library in C++
 *)

module TaskGraphExt:
  with "exp.rml"
  with "daelow.rml"


relation new_task: string => int

relation add_edge: (int (*from*),
		    int (*to*),
		    string (*communicated variable*), 
		    int (*priority*)) => ()

relation get_task: string => int 

relation store_result: (string, int, bool(*send to endtask? *),string (* orig name*)) => ()

relation dump_graph: (string) => ()

relation dump_merged_graph: (string) => ()

relation register_startstop: (int,int) => ()

relation get_starttask: () => int

relation get_stoptask: () => int

relation merge_tasks: (real (*latency*), real(*bandwidth*) ) => ()

relation schedule: (int (* nproc*)) => ()

relation generate_code: (int, (* n states *)
			 int, (* n alg. vars *)
			 int (* n params *)) 
	  => ()

relation set_execcost: (int , (* taskid *)
			real) (* value *) => ()

relation set_tasktype: (int , (* taskid *)
			int) (* type *) => ()

relation set_commcost: (int, (* source *)
			int, (* target *)
			int) (* value *) => ()

relation add_initvar: (int, 
		       string(*value*),
		       string(*origname*)) => ()

relation add_initstate: (int, 
			 string(*value*),
			 string(*origname*)) => ()

relation add_initparam: (int, 
			 string(*value*),
			 string(*origname*)) => ()

end
