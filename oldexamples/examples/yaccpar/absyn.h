/* interface Absyn */
extern void Absyn_5finit(void);
#define Absyn__RML_5fFILE_3dBOX3 5
#define Absyn__RML_5fFILE(X1,X2,X3) (mk_box3(5,(X1),(X2),(X3)))
#define Absyn__IMPORT_5fDEFINITION_3dBOX2 4
#define Absyn__IMPORT_5fDEFINITION(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__COMP_5fDEFINITION_3dBOX2 3
#define Absyn__COMP_5fDEFINITION(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__END_5fDEFINITION_3dBOX1 2
#define Absyn__END_5fDEFINITION(X1) (mk_box1(2,(X1)))
#define Absyn__BEGIN_5fDEFINITION_3dBOX4 1
#define Absyn__BEGIN_5fDEFINITION(X1,X2,X3,X4) (mk_box4(1,(X1),(X2),(X3),(X4)))
#define Absyn__PROGRAM_3dBOX2 0
#define Absyn__PROGRAM(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__TOP_3dBOX0 1
#define Absyn__TOP (mk_box0(1))
#define Absyn__WITHIN_3dBOX1 0
#define Absyn__WITHIN(X1) (mk_box1(0,(X1)))
#define Absyn__RMLDECLCOMMENT_3dBOX1 7
#define Absyn__RMLDECLCOMMENT(X1) (mk_box1(7,(X1)))
#define Absyn__RELATION_5fDEFINITION_3dBOX3 6
#define Absyn__RELATION_5fDEFINITION(X1,X2,X3) (mk_box3(6,(X1),(X2),(X3)))
#define Absyn__VALDEF_3dBOX2 5
#define Absyn__VALDEF(X1,X2) (mk_box2(5,(X1),(X2)))
#define Absyn__VALINTERFACE_3dBOX2 4
#define Absyn__VALINTERFACE(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__WITH_3dBOX1 3
#define Absyn__WITH(X1) (mk_box1(3,(X1)))
#define Absyn__TYPE_3dBOX2 2
#define Absyn__TYPE(X1,X2) (mk_box2(2,(X1),(X2)))
#define Absyn__DATATYPEDECL_3dBOX1 1
#define Absyn__DATATYPEDECL(X1) (mk_box1(1,(X1)))
#define Absyn__RELATION_5fINTERFACE_3dBOX2 0
#define Absyn__RELATION_5fINTERFACE(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__DATATYPE_3dBOX3 0
#define Absyn__DATATYPE(X1,X2,X3) (mk_box3(0,(X1),(X2),(X3)))
#define Absyn__RMLRULE_3dBOX4 0
#define Absyn__RMLRULE(X1,X2,X3,X4) (mk_box4(0,(X1),(X2),(X3),(X4)))
#define Absyn__RMLResultFail_3dBOX0 2
#define Absyn__RMLResultFail (mk_box0(2))
#define Absyn__RMLResultExp_3dBOX1 1
#define Absyn__RMLResultExp(X1) (mk_box1(1,(X1)))
#define Absyn__RMLNoResult_3dBOX0 0
#define Absyn__RMLNoResult (mk_box0(0))
#define Absyn__RMLGOAL_5fRELATION_3dBOX3 5
#define Absyn__RMLGOAL_5fRELATION(X1,X2,X3) (mk_box3(5,(X1),(X2),(X3)))
#define Absyn__RMLGOAL_5fEQUAL_3dBOX2 4
#define Absyn__RMLGOAL_5fEQUAL(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__RMLGOAL_5fLET_3dBOX2 3
#define Absyn__RMLGOAL_5fLET(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__RMLGOAL_5fPAT_3dBOX1 2
#define Absyn__RMLGOAL_5fPAT(X1) (mk_box1(2,(X1)))
#define Absyn__RMLGOAL_5fAND_3dBOX2 1
#define Absyn__RMLGOAL_5fAND(X1,X2) (mk_box2(1,(X1),(X2)))
#define Absyn__RMLGOAL_5fNOT_3dBOX1 0
#define Absyn__RMLGOAL_5fNOT(X1) (mk_box1(0,(X1)))
#define Absyn__EXTERNALDECL_3dBOX4 0
#define Absyn__EXTERNALDECL(X1,X2,X3,X4) (mk_box4(0,(X1),(X2),(X3),(X4)))
#define Absyn__CREF_5fIDENT_3dBOX2 1
#define Absyn__CREF_5fIDENT(X1,X2) (mk_box2(1,(X1),(X2)))
#define Absyn__CREF_5fQUAL_3dBOX3 0
#define Absyn__CREF_5fQUAL(X1,X2,X3) (mk_box3(0,(X1),(X2),(X3)))
#define Absyn__ATTR_3dBOX4 0
#define Absyn__ATTR(X1,X2,X3,X4) (mk_box4(0,(X1),(X2),(X3),(X4)))
#define Absyn__SUBSCRIPT_3dBOX1 1
#define Absyn__SUBSCRIPT(X1) (mk_box1(1,(X1)))
#define Absyn__NOSUB_3dBOX0 0
#define Absyn__NOSUB (mk_box0(0))
#define Absyn__NAMEDARG_3dBOX2 0
#define Absyn__NAMEDARG(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__FOR_5fITER_5fFARG_3dBOX3 1
#define Absyn__FOR_5fITER_5fFARG(X1,X2,X3) (mk_box3(1,(X1),(X2),(X3)))
#define Absyn__FUNCTIONARGS_3dBOX2 0
#define Absyn__FUNCTIONARGS(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__MIDENTpat_3dBOX2 5
#define Absyn__MIDENTpat(X1,X2) (mk_box2(5,(X1),(X2)))
#define Absyn__MBINDpat_3dBOX2 4
#define Absyn__MBINDpat(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__MSTRUCTpat_3dBOX2 3
#define Absyn__MSTRUCTpat(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__MCONpat_3dBOX1 2
#define Absyn__MCONpat(X1) (mk_box1(2,(X1)))
#define Absyn__MLITpat_3dBOX1 1
#define Absyn__MLITpat(X1) (mk_box1(1,(X1)))
#define Absyn__MWILDpat_3dBOX0 0
#define Absyn__MWILDpat (mk_box0(0))
#define Absyn__ENUMLITERAL_3dBOX2 0
#define Absyn__ENUMLITERAL(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__COMMENT_3dBOX2 0
#define Absyn__COMMENT(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__ANNOTATION_3dTRANSPARENT
#define Absyn__ANNOTATION(X) (X)
#define Absyn__COMPONENTITEM_3dBOX2 0
#define Absyn__COMPONENTITEM(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__COMPONENT_3dBOX3 0
#define Absyn__COMPONENT(X1,X2,X3) (mk_box3(0,(X1),(X2),(X3)))
#define Absyn__CLASSMOD_3dBOX2 0
#define Absyn__CLASSMOD(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__REDECLARATION_3dBOX4 1
#define Absyn__REDECLARATION(X1,X2,X3,X4) (mk_box4(1,(X1),(X2),(X3),(X4)))
#define Absyn__MODIFICATION_3dBOX5 0
#define Absyn__MODIFICATION(X1,X2,X3,X4,X5) (mk_box5(0,(X1),(X2),(X3),(X4),(X5)))
#define Absyn__CASE_3dBOX4 0
#define Absyn__CASE(X1,X2,X3,X4) (mk_box4(0,(X1),(X2),(X3),(X4)))
#define Absyn__C_5fMODIFICATION_3dBOX1 6
#define Absyn__C_5fMODIFICATION(X1) (mk_box1(6,(X1)))
#define Absyn__C_5fEXPRESSION_3dBOX1 5
#define Absyn__C_5fEXPRESSION(X1) (mk_box1(5,(X1)))
#define Absyn__C_5fELEMENT_3dBOX1 4
#define Absyn__C_5fELEMENT(X1) (mk_box1(4,(X1)))
#define Absyn__C_5fALGORITHMSECTION_3dBOX2 3
#define Absyn__C_5fALGORITHMSECTION(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__C_5fEQUATIONSECTION_3dBOX2 2
#define Absyn__C_5fEQUATIONSECTION(X1,X2) (mk_box2(2,(X1),(X2)))
#define Absyn__C_5fVARIABLENAME_3dBOX1 1
#define Absyn__C_5fVARIABLENAME(X1) (mk_box1(1,(X1)))
#define Absyn__C_5fTYPENAME_3dBOX1 0
#define Absyn__C_5fTYPENAME(X1) (mk_box1(0,(X1)))
#define Absyn__ALGORITHMITEMANN_3dBOX1 1
#define Absyn__ALGORITHMITEMANN(X1) (mk_box1(1,(X1)))
#define Absyn__ALGORITHMITEM_3dBOX2 0
#define Absyn__ALGORITHMITEM(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__ALG_5fMATCH_3dBOX4 7
#define Absyn__ALG_5fMATCH(X1,X2,X3,X4) (mk_box4(7,(X1),(X2),(X3),(X4)))
#define Absyn__ALG_5fNORETCALL_3dBOX2 6
#define Absyn__ALG_5fNORETCALL(X1,X2) (mk_box2(6,(X1),(X2)))
#define Absyn__ALG_5fWHEN_5fA_3dBOX3 5
#define Absyn__ALG_5fWHEN_5fA(X1,X2,X3) (mk_box3(5,(X1),(X2),(X3)))
#define Absyn__ALG_5fWHILE_3dBOX2 4
#define Absyn__ALG_5fWHILE(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__ALG_5fFOR_3dBOX3 3
#define Absyn__ALG_5fFOR(X1,X2,X3) (mk_box3(3,(X1),(X2),(X3)))
#define Absyn__ALG_5fIF_3dBOX4 2
#define Absyn__ALG_5fIF(X1,X2,X3,X4) (mk_box4(2,(X1),(X2),(X3),(X4)))
#define Absyn__ALG_5fTUPLE_5fASSIGN_3dBOX2 1
#define Absyn__ALG_5fTUPLE_5fASSIGN(X1,X2) (mk_box2(1,(X1),(X2)))
#define Absyn__ALG_5fASSIGN_3dBOX2 0
#define Absyn__ALG_5fASSIGN(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__ANNOTATIONITEM_3dBOX1 1
#define Absyn__ANNOTATIONITEM(X1) (mk_box1(1,(X1)))
#define Absyn__ELEMENTITEM_3dBOX1 0
#define Absyn__ELEMENTITEM(X1) (mk_box1(0,(X1)))
#define Absyn__ELEMENT_3dBOX8 0
#define Absyn__ELEMENT(X1,X2,X3,X4,X5,X6,X7,X8) (mk_box8(0,(X1),(X2),(X3),(X4),(X5),(X6),(X7),(X8)))
#define Absyn__COMPONENTS_3dBOX3 3
#define Absyn__COMPONENTS(X1,X2,X3) (mk_box3(3,(X1),(X2),(X3)))
#define Absyn__IMPORT_3dBOX2 2
#define Absyn__IMPORT(X1,X2) (mk_box2(2,(X1),(X2)))
#define Absyn__EXTENDS_3dBOX2 1
#define Absyn__EXTENDS(X1,X2) (mk_box2(1,(X1),(X2)))
#define Absyn__CLASSDEF_3dBOX2 0
#define Absyn__CLASSDEF(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__CLASS_3dBOX6 0
#define Absyn__CLASS(X1,X2,X3,X4,X5,X6) (mk_box6(0,(X1),(X2),(X3),(X4),(X5),(X6)))
#define Absyn__OVERLOAD_3dBOX2 4
#define Absyn__OVERLOAD(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__ENUMERATION_3dBOX2 3
#define Absyn__ENUMERATION(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__DERIVED_5fTYPES_3dBOX3 2
#define Absyn__DERIVED_5fTYPES(X1,X2,X3) (mk_box3(2,(X1),(X2),(X3)))
#define Absyn__DERIVED_3dBOX5 1
#define Absyn__DERIVED(X1,X2,X3,X4,X5) (mk_box5(1,(X1),(X2),(X3),(X4),(X5)))
#define Absyn__PARTS_3dBOX2 0
#define Absyn__PARTS(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__EXTERNAL_3dBOX2 6
#define Absyn__EXTERNAL(X1,X2) (mk_box2(6,(X1),(X2)))
#define Absyn__INITIALALGORITHMS_3dBOX1 5
#define Absyn__INITIALALGORITHMS(X1) (mk_box1(5,(X1)))
#define Absyn__ALGORITHMS_3dBOX1 4
#define Absyn__ALGORITHMS(X1) (mk_box1(4,(X1)))
#define Absyn__INITIALEQUATIONS_3dBOX1 3
#define Absyn__INITIALEQUATIONS(X1) (mk_box1(3,(X1)))
#define Absyn__EQUATIONS_3dBOX1 2
#define Absyn__EQUATIONS(X1) (mk_box1(2,(X1)))
#define Absyn__PROTECTED_3dBOX1 1
#define Absyn__PROTECTED(X1) (mk_box1(1,(X1)))
#define Absyn__PUBLIC_3dBOX1 0
#define Absyn__PUBLIC(X1) (mk_box1(0,(X1)))
#define Absyn__EQUATIONITEMANN_3dBOX1 1
#define Absyn__EQUATIONITEMANN(X1) (mk_box1(1,(X1)))
#define Absyn__EQUATIONITEM_3dBOX2 0
#define Absyn__EQUATIONITEM(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__EQ_5fCALL_3dBOX3 9
#define Absyn__EQ_5fCALL(X1,X2,X3) (mk_box3(9,(X1),(X2),(X3)))
#define Absyn__EQ_5fNOT_3dBOX1 8
#define Absyn__EQ_5fNOT(X1) (mk_box1(8,(X1)))
#define Absyn__EQ_5fSTRUCTEQUAL_3dBOX2 7
#define Absyn__EQ_5fSTRUCTEQUAL(X1,X2) (mk_box2(7,(X1),(X2)))
#define Absyn__EQ_5fLET_3dBOX2 6
#define Absyn__EQ_5fLET(X1,X2) (mk_box2(6,(X1),(X2)))
#define Absyn__EQ_5fNORETCALL_3dBOX2 5
#define Absyn__EQ_5fNORETCALL(X1,X2) (mk_box2(5,(X1),(X2)))
#define Absyn__EQ_5fWHEN_5fE_3dBOX3 4
#define Absyn__EQ_5fWHEN_5fE(X1,X2,X3) (mk_box3(4,(X1),(X2),(X3)))
#define Absyn__EQ_5fFOR_3dBOX3 3
#define Absyn__EQ_5fFOR(X1,X2,X3) (mk_box3(3,(X1),(X2),(X3)))
#define Absyn__EQ_5fCONNECT_3dBOX2 2
#define Absyn__EQ_5fCONNECT(X1,X2) (mk_box2(2,(X1),(X2)))
#define Absyn__EQ_5fEQUALS_3dBOX2 1
#define Absyn__EQ_5fEQUALS(X1,X2) (mk_box2(1,(X1),(X2)))
#define Absyn__EQ_5fIF_3dBOX4 0
#define Absyn__EQ_5fIF(X1,X2,X3,X4) (mk_box4(0,(X1),(X2),(X3),(X4)))
#define Absyn__MSTRUCTURAL_3dBOX2 24
#define Absyn__MSTRUCTURAL(X1,X2) (mk_box2(24,(X1),(X2)))
#define Absyn__RML_5fREFERENCE_3dBOX1 23
#define Absyn__RML_5fREFERENCE(X1) (mk_box1(23,(X1)))
#define Absyn__RMLLIT_3dBOX1 22
#define Absyn__RMLLIT(X1) (mk_box1(22,(X1)))
#define Absyn__RMLLIST_3dBOX1 21
#define Absyn__RMLLIST(X1) (mk_box1(21,(X1)))
#define Absyn__RMLNIL_3dBOX0 20
#define Absyn__RMLNIL (mk_box0(20))
#define Absyn__RMLCONS_3dBOX2 19
#define Absyn__RMLCONS(X1,X2) (mk_box2(19,(X1),(X2)))
#define Absyn__RMLCALL_3dBOX2 18
#define Absyn__RMLCALL(X1,X2) (mk_box2(18,(X1),(X2)))
#define Absyn__CODE_3dBOX1 17
#define Absyn__CODE(X1) (mk_box1(17,(X1)))
#define Absyn__END_3dBOX0 16
#define Absyn__END (mk_box0(16))
#define Absyn__TUPLE_3dBOX1 15
#define Absyn__TUPLE(X1) (mk_box1(15,(X1)))
#define Absyn__RANGE_3dBOX3 14
#define Absyn__RANGE(X1,X2,X3) (mk_box3(14,(X1),(X2),(X3)))
#define Absyn__MATRIX_3dBOX1 13
#define Absyn__MATRIX(X1) (mk_box1(13,(X1)))
#define Absyn__ARRAY_3dBOX1 12
#define Absyn__ARRAY(X1) (mk_box1(12,(X1)))
#define Absyn__CALL_3dBOX2 11
#define Absyn__CALL(X1,X2) (mk_box2(11,(X1),(X2)))
#define Absyn__IFEXP_3dBOX4 10
#define Absyn__IFEXP(X1,X2,X3,X4) (mk_box4(10,(X1),(X2),(X3),(X4)))
#define Absyn__RELATION_3dBOX3 9
#define Absyn__RELATION(X1,X2,X3) (mk_box3(9,(X1),(X2),(X3)))
#define Absyn__LUNARY_3dBOX2 8
#define Absyn__LUNARY(X1,X2) (mk_box2(8,(X1),(X2)))
#define Absyn__LBINARY_3dBOX3 7
#define Absyn__LBINARY(X1,X2,X3) (mk_box3(7,(X1),(X2),(X3)))
#define Absyn__UNARY_3dBOX2 6
#define Absyn__UNARY(X1,X2) (mk_box2(6,(X1),(X2)))
#define Absyn__BINARY_3dBOX3 5
#define Absyn__BINARY(X1,X2,X3) (mk_box3(5,(X1),(X2),(X3)))
#define Absyn__BOOL_3dBOX1 4
#define Absyn__BOOL(X1) (mk_box1(4,(X1)))
#define Absyn__STRING_3dBOX1 3
#define Absyn__STRING(X1) (mk_box1(3,(X1)))
#define Absyn__CREF_3dBOX1 2
#define Absyn__CREF(X1) (mk_box1(2,(X1)))
#define Absyn__REAL_3dBOX1 1
#define Absyn__REAL(X1) (mk_box1(1,(X1)))
#define Absyn__INTEGER_3dBOX1 0
#define Absyn__INTEGER(X1) (mk_box1(0,(X1)))
#define Absyn__NEQUAL_3dINT 15
#define Absyn__NEQUAL (mk_icon(15))
#define Absyn__EQUAL_3dINT 14
#define Absyn__EQUAL (mk_icon(14))
#define Absyn__GREATEREQ_3dINT 13
#define Absyn__GREATEREQ (mk_icon(13))
#define Absyn__GREATER_3dINT 12
#define Absyn__GREATER (mk_icon(12))
#define Absyn__LESSEQ_3dINT 11
#define Absyn__LESSEQ (mk_icon(11))
#define Absyn__LESS_3dINT 10
#define Absyn__LESS (mk_icon(10))
#define Absyn__NOT_3dINT 9
#define Absyn__NOT (mk_icon(9))
#define Absyn__OR_3dINT 8
#define Absyn__OR (mk_icon(8))
#define Absyn__AND_3dINT 7
#define Absyn__AND (mk_icon(7))
#define Absyn__UMINUS_3dINT 6
#define Absyn__UMINUS (mk_icon(6))
#define Absyn__UPLUS_3dINT 5
#define Absyn__UPLUS (mk_icon(5))
#define Absyn__POW_3dINT 4
#define Absyn__POW (mk_icon(4))
#define Absyn__DIV_3dINT 3
#define Absyn__DIV (mk_icon(3))
#define Absyn__MUL_3dINT 2
#define Absyn__MUL (mk_icon(2))
#define Absyn__SUB_3dINT 1
#define Absyn__SUB (mk_icon(1))
#define Absyn__ADD_3dINT 0
#define Absyn__ADD (mk_icon(0))
#define Absyn__NON_5fEACH_3dINT 1
#define Absyn__NON_5fEACH (mk_icon(1))
#define Absyn__EACH_3dINT 0
#define Absyn__EACH (mk_icon(0))
#define Absyn__R_5fUNIONTYPE_3dINT 14
#define Absyn__R_5fUNIONTYPE (mk_icon(14))
#define Absyn__R_5fPREDEFINED_5fENUM_3dINT 13
#define Absyn__R_5fPREDEFINED_5fENUM (mk_icon(13))
#define Absyn__R_5fPREDEFINED_5fBOOL_3dINT 12
#define Absyn__R_5fPREDEFINED_5fBOOL (mk_icon(12))
#define Absyn__R_5fPREDEFINED_5fSTRING_3dINT 11
#define Absyn__R_5fPREDEFINED_5fSTRING (mk_icon(11))
#define Absyn__R_5fPREDEFINED_5fREAL_3dINT 10
#define Absyn__R_5fPREDEFINED_5fREAL (mk_icon(10))
#define Absyn__R_5fPREDEFINED_5fINT_3dINT 9
#define Absyn__R_5fPREDEFINED_5fINT (mk_icon(9))
#define Absyn__R_5fENUMERATION_3dINT 8
#define Absyn__R_5fENUMERATION (mk_icon(8))
#define Absyn__R_5fFUNCTION_3dINT 7
#define Absyn__R_5fFUNCTION (mk_icon(7))
#define Absyn__R_5fPACKAGE_3dINT 6
#define Absyn__R_5fPACKAGE (mk_icon(6))
#define Absyn__R_5fTYPE_3dINT 5
#define Absyn__R_5fTYPE (mk_icon(5))
#define Absyn__R_5fCONNECTOR_3dINT 4
#define Absyn__R_5fCONNECTOR (mk_icon(4))
#define Absyn__R_5fBLOCK_3dINT 3
#define Absyn__R_5fBLOCK (mk_icon(3))
#define Absyn__R_5fRECORD_3dINT 2
#define Absyn__R_5fRECORD (mk_icon(2))
#define Absyn__R_5fMODEL_3dINT 1
#define Absyn__R_5fMODEL (mk_icon(1))
#define Absyn__R_5fCLASS_3dINT 0
#define Absyn__R_5fCLASS (mk_icon(0))
#define Absyn__UNSPECIFIED_3dINT 2
#define Absyn__UNSPECIFIED (mk_icon(2))
#define Absyn__OUTER_3dINT 1
#define Absyn__OUTER (mk_icon(1))
#define Absyn__INNER_3dINT 0
#define Absyn__INNER (mk_icon(0))
#define Absyn__UNQUAL_5fIMPORT_3dBOX1 2
#define Absyn__UNQUAL_5fIMPORT(X1) (mk_box1(2,(X1)))
#define Absyn__QUAL_5fIMPORT_3dBOX1 1
#define Absyn__QUAL_5fIMPORT(X1) (mk_box1(1,(X1)))
#define Absyn__NAMED_5fIMPORT_3dBOX2 0
#define Absyn__NAMED_5fIMPORT(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__CONST_3dINT 3
#define Absyn__CONST (mk_icon(3))
#define Absyn__PARAM_3dINT 2
#define Absyn__PARAM (mk_icon(2))
#define Absyn__DISCRETE_3dINT 1
#define Absyn__DISCRETE (mk_icon(1))
#define Absyn__VAR_3dINT 0
#define Absyn__VAR (mk_icon(0))
#define Absyn__BIDIR_3dINT 2
#define Absyn__BIDIR (mk_icon(2))
#define Absyn__OUTPUT_3dINT 1
#define Absyn__OUTPUT (mk_icon(1))
#define Absyn__INPUT_3dINT 0
#define Absyn__INPUT (mk_icon(0))
#define Absyn__IDENT_3dBOX1 1
#define Absyn__IDENT(X1) (mk_box1(1,(X1)))
#define Absyn__QUALIFIED_3dBOX2 0
#define Absyn__QUALIFIED(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__RMLPAT_5fLIST_3dBOX1 7
#define Absyn__RMLPAT_5fLIST(X1) (mk_box1(7,(X1)))
#define Absyn__RMLPAT_5fNIL_3dBOX0 6
#define Absyn__RMLPAT_5fNIL (mk_box0(6))
#define Absyn__RMLPAT_5fSTRUCT_3dBOX2 5
#define Absyn__RMLPAT_5fSTRUCT(X1,X2) (mk_box2(5,(X1),(X2)))
#define Absyn__RMLPAT_5fCONS_3dBOX2 4
#define Absyn__RMLPAT_5fCONS(X1,X2) (mk_box2(4,(X1),(X2)))
#define Absyn__RMLPAT_5fAS_3dBOX2 3
#define Absyn__RMLPAT_5fAS(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__RMLPAT_5fIDENT_3dBOX1 2
#define Absyn__RMLPAT_5fIDENT(X1) (mk_box1(2,(X1)))
#define Absyn__RMLPAT_5fLITERAL_3dBOX1 1
#define Absyn__RMLPAT_5fLITERAL(X1) (mk_box1(1,(X1)))
#define Absyn__RMLPAT_5fWILDCARD_3dBOX0 0
#define Absyn__RMLPAT_5fWILDCARD (mk_box0(0))
#define Absyn__RMLLIT_5fCHAR_3dBOX1 3
#define Absyn__RMLLIT_5fCHAR(X1) (mk_box1(3,(X1)))
#define Absyn__RMLLIT_5fREAL_3dBOX1 2
#define Absyn__RMLLIT_5fREAL(X1) (mk_box1(2,(X1)))
#define Absyn__RMLLIT_5fSTRING_3dBOX1 1
#define Absyn__RMLLIT_5fSTRING(X1) (mk_box1(1,(X1)))
#define Absyn__RMLLIT_5fINTEGER_3dBOX1 0
#define Absyn__RMLLIT_5fINTEGER(X1) (mk_box1(0,(X1)))
#define Absyn__DTCONS_3dBOX2 0
#define Absyn__DTCONS(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__RMLDB_3dTRANSPARENT
#define Absyn__RMLDB(X) (X)
#define Absyn__RMLDB_5fCTOR_3dBOX4 3
#define Absyn__RMLDB_5fCTOR(X1,X2,X3,X4) (mk_box4(3,(X1),(X2),(X3),(X4)))
#define Absyn__RMLDB_5fTY_3dBOX3 2
#define Absyn__RMLDB_5fTY(X1,X2,X3) (mk_box3(2,(X1),(X2),(X3)))
#define Absyn__RMLDB_5fREL_3dBOX4 1
#define Absyn__RMLDB_5fREL(X1,X2,X3,X4) (mk_box4(1,(X1),(X2),(X3),(X4)))
#define Absyn__RMLDB_5fVAR_3dBOX6 0
#define Absyn__RMLDB_5fVAR(X1,X2,X3,X4,X5,X6) (mk_box6(0,(X1),(X2),(X3),(X4),(X5),(X6)))
#define Absyn__RMLDB_5fRANGE_3dBOX4 0
#define Absyn__RMLDB_5fRANGE(X1,X2,X3,X4) (mk_box4(0,(X1),(X2),(X3),(X4)))
#define Absyn__CALLSIGN_3dBOX2 0
#define Absyn__CALLSIGN(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__RMLTYPE_5fUSERDEFINED_3dBOX1 7
#define Absyn__RMLTYPE_5fUSERDEFINED(X1) (mk_box1(7,(X1)))
#define Absyn__RMLTYPE_5fTYVAR_3dBOX1 6
#define Absyn__RMLTYPE_5fTYVAR(X1) (mk_box1(6,(X1)))
#define Absyn__RMLTYPE_5fTUPLE_3dBOX1 5
#define Absyn__RMLTYPE_5fTUPLE(X1) (mk_box1(5,(X1)))
#define Absyn__RMLTYPE_5fSIGNATURE_3dBOX1 4
#define Absyn__RMLTYPE_5fSIGNATURE(X1) (mk_box1(4,(X1)))
#define Absyn__RMLTYPE_5fTYCONS_3dBOX2 3
#define Absyn__RMLTYPE_5fTYCONS(X1,X2) (mk_box2(3,(X1),(X2)))
#define Absyn__RMLTYPE_5fREAL_3dBOX0 2
#define Absyn__RMLTYPE_5fREAL (mk_box0(2))
#define Absyn__RMLTYPE_5fSTRING_3dBOX0 1
#define Absyn__RMLTYPE_5fSTRING (mk_box0(1))
#define Absyn__RMLTYPE_5fINT_3dBOX0 0
#define Absyn__RMLTYPE_5fINT (mk_box0(0))
#define Absyn__RMLLONGID_3dBOX2 1
#define Absyn__RMLLONGID(X1,X2) (mk_box2(1,(X1),(X2)))
#define Absyn__RMLSHORTID_3dBOX2 0
#define Absyn__RMLSHORTID(X1,X2) (mk_box2(0,(X1),(X2)))
#define Absyn__INFO_3dBOX5 0
#define Absyn__INFO(X1,X2,X3,X4,X5) (mk_box5(0,(X1),(X2),(X3),(X4),(X5)))
